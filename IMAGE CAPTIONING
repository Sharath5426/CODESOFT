 IMAGE CAPTIONING

from transformers import BlipProcessor, BlipForConditionalGeneration
from PIL import Image
import torch

# Load the BLIP processor and model
processor = BlipProcessor.from_pretrained("Salesforce/blip-image-captioning-base")
model = BlipForConditionalGeneration.from_pretrained("Salesforce/blip-image-captioning-base")

# Function to generate captions using BLIP
def generate_caption_blip(image_path):
    # Load and preprocess the image
    image = Image.open(image_path).convert("RGB")
    inputs = processor(image, return_tensors="pt")

    # Generate captions
    output = model.generate(**inputs)
    caption = processor.decode(output[0], skip_special_tokens=True)
    return caption

# Test with an image
image_path = "/content/drive/MyDrive/images.jpg"  # Replace with your image path
caption = generate_caption_blip(image_path)
print(f"Generated Caption: {caption}")

# Display the image with caption
import matplotlib.pyplot as plt
plt.imshow(Image.open(image_path))
plt.axis('off')
plt.title(caption)
plt.show()from transformers import BlipProcessor, BlipForConditionalGeneration
from PIL import Image
import torch

# Load the BLIP processor and model
processor = BlipProcessor.from_pretrained("Salesforce/blip-image-captioning-base")
model = BlipForConditionalGeneration.from_pretrained("Salesforce/blip-image-captioning-base")

# Function to generate captions using BLIP
def generate_caption_blip(image_path):
    # Load and preprocess the image
    image = Image.open(image_path).convert("RGB")
    inputs = processor(image, return_tensors="pt")

    # Generate captions
    output = model.generate(**inputs)
    caption = processor.decode(output[0], skip_special_tokens=True)
    return caption

# Test with an image
image_path = "/content/drive/MyDrive/images.jpg"  # Replace with your image path
caption = generate_caption_blip(image_path)
print(f"Generated Caption: {caption}")

# Display the image with caption
import matplotlib.pyplot as plt
plt.imshow(Image.open(image_path))
plt.axis('off')
plt.title(caption)
plt.show()
